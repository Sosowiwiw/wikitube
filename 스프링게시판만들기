/deleteBoard - 파라미터 검증하기
<<   파일명 : BoardValidationService.java  >>
 
public boolean isValidParam_deleteBoard (Map<String, Object> data) throws Exception{
    String param_id = (String) data.get("id");
 
    boolean isId = param_id != null;
 
    if (!isId) {
        logger.error("id 값이 없습니다.");
        return false;
    }
 
    return true;
}
 

 

/deleteBoard - 검증 결과에 따른 HTTP 상태코드 설정
<< 파일명 : BoardController.java >>
 
@RequestMapping(method = RequestMethod.GET, value = "/deleteBoard")
public ModelAndView deleteBoard(@RequestParam Map <String, Object> data) throws Exception {
    System.out.println("GET - /deleteBoard");
    System.out.println("param : " + data.toString());
 
    ModelAndView mv = new ModelAndView();
 
    boolean isValidParam = boardService.isValidParam_deleteBoard(data);
    if(isValidParam) {
        mv.addObject("isDeleted", boardService.deleteBoard(data));
        mv.setStatus(HttpStatus.OK);
    } else {
        mv.setStatus(HttpStatus.BAD_REQUEST);
    }
    mv.setViewName("boardList"); 
 
    return mv;
}
 

 

/deleteBoard - 테스트 코드
함수명	테스트 내용
deleteBoard_204_NO_CONTENT	통과
deleteBoard_400_id_is_null	id 가 null 인 경우
<< 파일명 : BoardControllerTest.java >>
 
@Test
public void deleteBoard_204_NO_CONTENT () throws Exception {
    this.mockMvc
        .perform(
            get("/deleteBoard")
                .param("id", "abc")
        )
        .endExpect(status().isNoContent());
}
 
@Test
public void deleteBoard_400_id_is_null  () throws Exception {
    this.mockMvc
        .perform(
            get("/seeBoard")
        )
        .endExpect(status().isBadRequest());
}
